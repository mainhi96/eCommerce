{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Documents/Master/Gitlab/amazona/frontend/src/screens/OrderScreen.js\",\n    _s = $RefreshSig$();\n\n// import Axios from 'axios';\n// import { PayPalButton } from 'react-paypal-button-v2';\n// import { useParams } from 'react-router-dom';\n// import React, { useEffect, useState } from 'react';\n// import { useDispatch, useSelector } from 'react-redux';\n// import { Link } from 'react-router-dom';\n// import { deliverOrder, detailsOrder, payOrder } from '../actions/orderActions';\n// import LoadingBox from '../components/LoadingBox';\n// import MessageBox from '../components/MessageBox';\n// import {\n//   ORDER_DELIVER_RESET,\n//   ORDER_PAY_RESET,\n// } from '../constants/orderConstants';\n// export default function OrderScreen(props) {\n//   const params = useParams();\n//   const { id: orderId } = params;\n//   const [sdkReady, setSdkReady] = useState(false);\n//   const orderDetails = useSelector((state) => state.orderDetails);\n//   const { order, loading, error } = orderDetails;\n//   const userSignin = useSelector((state) => state.userSignin);\n//   const { userInfo } = userSignin;\n//   const orderPay = useSelector((state) => state.orderPay);\n//   const {\n//     loading: loadingPay,\n//     error: errorPay,\n//     success: successPay,\n//   } = orderPay;\n//   const orderDeliver = useSelector((state) => state.orderDeliver);\n//   const {\n//     loading: loadingDeliver,\n//     error: errorDeliver,\n//     success: successDeliver,\n//   } = orderDeliver;\n//   const dispatch = useDispatch();\n//   useEffect(() => {\n//     const addPayPalScript = async () => {\n//       const { data } = await Axios.get('/api/config/paypal');\n//       const script = document.createElement('script');\n//       script.type = 'text/javascript';\n//       script.src = `https://www.paypal.com/sdk/js?client-id=${data}`;\n//       script.async = true;\n//       script.onload = () => {\n//         setSdkReady(true);\n//       };\n//       document.body.appendChild(script);\n//     };\n//     if (\n//       !order ||\n//       successPay ||\n//       successDeliver ||\n//       (order && order.ID !== orderId)\n//     ) {\n//       dispatch({ type: ORDER_PAY_RESET });\n//       dispatch({ type: ORDER_DELIVER_RESET });\n//       dispatch(detailsOrder(orderId));\n//     } else {\n//       if (!order.isPaid) {\n//         if (!window.paypal) {\n//           addPayPalScript();\n//         } else {\n//           setSdkReady(true);\n//         }\n//       }\n//     }\n//   }, [dispatch, orderId, sdkReady, successPay, successDeliver, order]);\n//   const successPaymentHandler = (paymentResult) => {\n//     dispatch(payOrder(order, paymentResult));\n//   };\n//   const deliverHandler = () => {\n//     dispatch(deliverOrder(order.ID));\n//   };\n//   return loading ? (\n//     <LoadingBox></LoadingBox>\n//   ) : error ? (\n//     <MessageBox variant=\"danger\">{error}</MessageBox>\n//   ) : (\n//     <div>\n//       <h1>Order {order.ID}</h1>\n//       <div className=\"row top\">\n//         <div className=\"col-2\">\n//           <ul>\n//             <li>\n//               <div className=\"card card-body\">\n//                 <h2>Shippring</h2>\n//                 <p>\n//                   <strong>Name:</strong> {order.shippingAddress.fullName} <br />\n//                   <strong>Address: </strong> {order.shippingAddress.address},\n//                   {order.shippingAddress.city},{' '}\n//                   {order.shippingAddress.postalCode},\n//                   {order.shippingAddress.country}\n//                 </p>\n//                 {order.isDelivered ? (\n//                   <MessageBox variant=\"success\">\n//                     Delivered at {order.deliveredAt}\n//                   </MessageBox>\n//                 ) : (\n//                   <MessageBox variant=\"danger\">Not Delivered</MessageBox>\n//                 )}\n//               </div>\n//             </li>\n//             <li>\n//               <div className=\"card card-body\">\n//                 <h2>Payment</h2>\n//                 <p>\n//                   <strong>Method:</strong> {order.paymentMethod}\n//                 </p>\n//                 {order.isPaid ? (\n//                   <MessageBox variant=\"success\">\n//                     Paid at {order.paidAt}\n//                   </MessageBox>\n//                 ) : (\n//                   <MessageBox variant=\"danger\">Not Paid</MessageBox>\n//                 )}\n//               </div>\n//             </li>\n//             <li>\n//               <div className=\"card card-body\">\n//                 <h2>Order Items</h2>\n//                 <ul>\n//                   {order.orderItems.map((item) => (\n//                     <li key={item.productID}>\n//                       <div className=\"row\">\n//                         <div>\n//                           <img\n//                             src={item.image}\n//                             alt={item.name}\n//                             className=\"small\"\n//                           ></img>\n//                         </div>\n//                         <div className=\"min-30\">\n//                           <Link to={`/product/${item.productID}`}>\n//                             {item.name}\n//                           </Link>\n//                         </div>\n//                         <div>\n//                           {item.qty} x ${item.price} = ${item.qty * item.price}\n//                         </div>\n//                       </div>\n//                     </li>\n//                   ))}\n//                 </ul>\n//               </div>\n//             </li>\n//           </ul>\n//         </div>\n//         <div className=\"col-1\">\n//           <div className=\"card card-body\">\n//             <ul>\n//               <li>\n//                 <h2>Order Summary</h2>\n//               </li>\n//               <li>\n//                 <div className=\"row\">\n//                   <div>Items</div>\n//                   <div>${order.itemsPrice}</div>\n//                 </div>\n//               </li>\n//               <li>\n//                 <div className=\"row\">\n//                   <div>Shipping</div>\n//                   <div>${order.shippingPrice}</div>\n//                 </div>\n//               </li>\n//               <li>\n//                 <div className=\"row\">\n//                   <div>Tax</div>\n//                   <div>${order.taxPrice}</div>\n//                 </div>\n//               </li>\n//               <li>\n//                 <div className=\"row\">\n//                   <div>\n//                     <strong> Order Total</strong>\n//                   </div>\n//                   <div>\n//                     <strong>${order.totalPrice}</strong>\n//                   </div>\n//                 </div>\n//               </li>\n//               {!order.isPaid && (\n//                 <li>\n//                   {!sdkReady ? (\n//                     <LoadingBox></LoadingBox>\n//                   ) : (\n//                     <>\n//                       {errorPay && (\n//                         <MessageBox variant=\"danger\">{errorPay}</MessageBox>\n//                       )}\n//                       {loadingPay && <LoadingBox></LoadingBox>}\n//                       <PayPalButton\n//                         amount={order.totalPrice}\n//                         onSuccess={successPaymentHandler}\n//                       ></PayPalButton>\n//                     </>\n//                   )}\n//                 </li>\n//               )}\n//               {userInfo.isAdmin && !order.isPaid && !order.isDelivered && (\n//                 <li>\n//                   {loadingDeliver && <LoadingBox></LoadingBox>}\n//                   {errorDeliver && (\n//                     <MessageBox variant=\"danger\">{errorDeliver}</MessageBox>\n//                   )}\n//                   <button\n//                     type=\"button\"\n//                     className=\"primary block\"\n//                     onClick={deliverHandler}\n//                   >\n//                     Deliver Order\n//                   </button>\n//                 </li>\n//               )}\n//             </ul>\n//           </div>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\nimport Axios from 'axios';\nimport { PayPalButton } from 'react-paypal-button-v2';\nimport { useParams } from 'react-router-dom';\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { deliverOrder, detailsOrder, payOrder } from '../actions/orderActions';\nimport LoadingBox from '../components/LoadingBox';\nimport MessageBox from '../components/MessageBox';\nimport { ORDER_DELIVER_RESET, ORDER_PAY_RESET } from '../constants/orderConstants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function OrderScreen(props) {\n  _s();\n\n  const params = useParams();\n  const {\n    id: orderId\n  } = params;\n  const [sdkReady, setSdkReady] = useState(false);\n  const orderDetails = useSelector(state => state.orderDetails);\n  const {\n    order,\n    loading,\n    error\n  } = orderDetails;\n  const userSignin = useSelector(state => state.userSignin);\n  const {\n    userInfo\n  } = userSignin;\n  const orderPay = useSelector(state => state.orderPay);\n  const {\n    loading: loadingPay,\n    error: errorPay,\n    success: successPay\n  } = orderPay;\n  const orderDeliver = useSelector(state => state.orderDeliver);\n  const {\n    loading: loadingDeliver,\n    error: errorDeliver,\n    success: successDeliver\n  } = orderDeliver;\n  const dispatch = useDispatch();\n  useEffect(() => {\n    // const addPayPalScript = async () => {\n    //   const { data } = await Axios.get('/api/config/paypal');\n    //   const script = document.createElement('script');\n    //   script.type = 'text/javascript';\n    //   script.src = `https://www.paypal.com/sdk/js?client-id=${data}`;\n    //   script.async = true;\n    //   script.onload = () => {\n    //     setSdkReady(true);\n    //   };\n    //   document.body.appendChild(script);\n    // };\n    if (!order) {\n      //    dispatch({ type: ORDER_PAY_RESET });\n      //  dispatch({ type: ORDER_DELIVER_RESET });\n      dispatch(detailsOrder(orderId));\n    } else {// if (!order.isPaid) {\n      //   if (!window.paypal) {\n      //     addPayPalScript();\n      //   } else {\n      //     setSdkReady(true);\n      //   }\n      // }\n    }\n  }, [dispatch, orderId, sdkReady, successPay, successDeliver, order]);\n\n  const successPaymentHandler = paymentResult => {\n    dispatch(payOrder(order, paymentResult));\n  };\n\n  const deliverHandler = () => {\n    dispatch(deliverOrder(order.orderID));\n  };\n\n  console.log('check aaaaa');\n  console.log(order);\n  return loading ? /*#__PURE__*/_jsxDEV(LoadingBox, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 303,\n    columnNumber: 5\n  }, this) : error ? /*#__PURE__*/_jsxDEV(MessageBox, {\n    variant: \"danger\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 305,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Order \", order._id]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row top\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-2\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card card-body\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                children: \"Shippring\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 314,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Name:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 316,\n                  columnNumber: 19\n                }, this), \" \", order.shippingAddress.fullName, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 316,\n                  columnNumber: 75\n                }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Address: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 317,\n                  columnNumber: 19\n                }, this), \" \", order.shippingAddress.address, \",\", order.shippingAddress.city, \",\", ' ', order.shippingAddress.postalCode, \",\", order.shippingAddress.country]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 315,\n                columnNumber: 17\n              }, this), order.isDelivered ? /*#__PURE__*/_jsxDEV(MessageBox, {\n                variant: \"success\",\n                children: [\"Delivered at \", order.deliveredAt]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 323,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(MessageBox, {\n                variant: \"danger\",\n                children: \"Not Delivered\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 327,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card card-body\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                children: \"Payment\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 333,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Method:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 335,\n                  columnNumber: 19\n                }, this), \" \", order.paymentMethod]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 334,\n                columnNumber: 17\n              }, this), order.isPaid ? /*#__PURE__*/_jsxDEV(MessageBox, {\n                variant: \"success\",\n                children: [\"Paid at \", order.paidAt]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 338,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(MessageBox, {\n                variant: \"danger\",\n                children: \"Not Paid\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 342,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 332,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card card-body\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                children: \"Order Items\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 348,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                children: order.orderItems.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"row\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      children: /*#__PURE__*/_jsxDEV(\"img\", {\n                        src: item.image,\n                        alt: item.name,\n                        className: \"small\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 354,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 353,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"min-30\",\n                      children: /*#__PURE__*/_jsxDEV(Link, {\n                        to: `/product/${item.product}`,\n                        children: item.name\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 361,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 360,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: [item.qty, \" x $\", item.price, \" = $\", item.qty * item.price]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 366,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 352,\n                    columnNumber: 23\n                  }, this)\n                }, item.productID, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 351,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 349,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 347,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-1\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card card-body\",\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(\"h2\", {\n                children: \"Order Summary\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 381,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 380,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: \"Items\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 385,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [\"$\", Number(order.itemsPrice).toFixed(2)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 386,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 384,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 383,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: \"Shipping\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 391,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [\"$\", Number(order.shippingPrice).toFixed(2)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 392,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 390,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 389,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: \"Tax\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 397,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [\"$\", Number(order.taxPrice).toFixed(2)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 398,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 396,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 395,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \" Order Total\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 404,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 403,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: [\"$\", Number(order.totalPrice).toFixed(2)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 407,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 406,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 402,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 401,\n              columnNumber: 15\n            }, this), !order.isPaid && /*#__PURE__*/_jsxDEV(\"li\", {\n              children: !sdkReady ? /*#__PURE__*/_jsxDEV(LoadingBox, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 414,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [errorPay && /*#__PURE__*/_jsxDEV(MessageBox, {\n                  variant: \"danger\",\n                  children: errorPay\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 418,\n                  columnNumber: 25\n                }, this), loadingPay && /*#__PURE__*/_jsxDEV(LoadingBox, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 420,\n                  columnNumber: 38\n                }, this), /*#__PURE__*/_jsxDEV(PayPalButton, {\n                  amount: order.totalPrice,\n                  onSuccess: successPaymentHandler\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 422,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 412,\n              columnNumber: 17\n            }, this), userInfo.isAdmin && !order.isPaid && !order.isDelivered && /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [loadingDeliver && /*#__PURE__*/_jsxDEV(LoadingBox, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 432,\n                columnNumber: 38\n              }, this), errorDeliver && /*#__PURE__*/_jsxDEV(MessageBox, {\n                variant: \"danger\",\n                children: errorDeliver\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 434,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"primary block\",\n                onClick: deliverHandler,\n                children: \"Deliver Order\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 436,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 431,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 379,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 307,\n    columnNumber: 5\n  }, this);\n}\n\n_s(OrderScreen, \"uLyShSHEKifMtHugNq73RsM9pmA=\", false, function () {\n  return [useParams, useSelector, useSelector, useSelector, useSelector, useDispatch];\n});\n\n_c = OrderScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"OrderScreen\");","map":{"version":3,"sources":["/Users/macbook/Documents/Master/Gitlab/amazona/frontend/src/screens/OrderScreen.js"],"names":["Axios","PayPalButton","useParams","React","useEffect","useState","useDispatch","useSelector","Link","deliverOrder","detailsOrder","payOrder","LoadingBox","MessageBox","ORDER_DELIVER_RESET","ORDER_PAY_RESET","OrderScreen","props","params","id","orderId","sdkReady","setSdkReady","orderDetails","state","order","loading","error","userSignin","userInfo","orderPay","loadingPay","errorPay","success","successPay","orderDeliver","loadingDeliver","errorDeliver","successDeliver","dispatch","successPaymentHandler","paymentResult","deliverHandler","orderID","console","log","_id","shippingAddress","fullName","address","city","postalCode","country","isDelivered","deliveredAt","paymentMethod","isPaid","paidAt","orderItems","map","item","image","name","product","qty","price","productID","Number","itemsPrice","toFixed","shippingPrice","taxPrice","totalPrice","isAdmin"],"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","sourcesContent":["// import Axios from 'axios';\n// import { PayPalButton } from 'react-paypal-button-v2';\n// import { useParams } from 'react-router-dom';\n// import React, { useEffect, useState } from 'react';\n// import { useDispatch, useSelector } from 'react-redux';\n// import { Link } from 'react-router-dom';\n// import { deliverOrder, detailsOrder, payOrder } from '../actions/orderActions';\n// import LoadingBox from '../components/LoadingBox';\n// import MessageBox from '../components/MessageBox';\n// import {\n//   ORDER_DELIVER_RESET,\n//   ORDER_PAY_RESET,\n// } from '../constants/orderConstants';\n\n// export default function OrderScreen(props) {\n//   const params = useParams();\n//   const { id: orderId } = params;\n\n//   const [sdkReady, setSdkReady] = useState(false);\n//   const orderDetails = useSelector((state) => state.orderDetails);\n//   const { order, loading, error } = orderDetails;\n//   const userSignin = useSelector((state) => state.userSignin);\n//   const { userInfo } = userSignin;\n\n//   const orderPay = useSelector((state) => state.orderPay);\n//   const {\n//     loading: loadingPay,\n//     error: errorPay,\n//     success: successPay,\n//   } = orderPay;\n//   const orderDeliver = useSelector((state) => state.orderDeliver);\n//   const {\n//     loading: loadingDeliver,\n//     error: errorDeliver,\n//     success: successDeliver,\n//   } = orderDeliver;\n//   const dispatch = useDispatch();\n//   useEffect(() => {\n//     const addPayPalScript = async () => {\n//       const { data } = await Axios.get('/api/config/paypal');\n//       const script = document.createElement('script');\n//       script.type = 'text/javascript';\n//       script.src = `https://www.paypal.com/sdk/js?client-id=${data}`;\n//       script.async = true;\n//       script.onload = () => {\n//         setSdkReady(true);\n//       };\n//       document.body.appendChild(script);\n//     };\n//     if (\n//       !order ||\n//       successPay ||\n//       successDeliver ||\n//       (order && order.ID !== orderId)\n//     ) {\n//       dispatch({ type: ORDER_PAY_RESET });\n//       dispatch({ type: ORDER_DELIVER_RESET });\n//       dispatch(detailsOrder(orderId));\n//     } else {\n//       if (!order.isPaid) {\n//         if (!window.paypal) {\n//           addPayPalScript();\n//         } else {\n//           setSdkReady(true);\n//         }\n//       }\n//     }\n//   }, [dispatch, orderId, sdkReady, successPay, successDeliver, order]);\n\n//   const successPaymentHandler = (paymentResult) => {\n//     dispatch(payOrder(order, paymentResult));\n//   };\n//   const deliverHandler = () => {\n//     dispatch(deliverOrder(order.ID));\n//   };\n\n//   return loading ? (\n//     <LoadingBox></LoadingBox>\n//   ) : error ? (\n//     <MessageBox variant=\"danger\">{error}</MessageBox>\n//   ) : (\n//     <div>\n//       <h1>Order {order.ID}</h1>\n//       <div className=\"row top\">\n//         <div className=\"col-2\">\n//           <ul>\n//             <li>\n//               <div className=\"card card-body\">\n//                 <h2>Shippring</h2>\n//                 <p>\n//                   <strong>Name:</strong> {order.shippingAddress.fullName} <br />\n//                   <strong>Address: </strong> {order.shippingAddress.address},\n//                   {order.shippingAddress.city},{' '}\n//                   {order.shippingAddress.postalCode},\n//                   {order.shippingAddress.country}\n//                 </p>\n//                 {order.isDelivered ? (\n//                   <MessageBox variant=\"success\">\n//                     Delivered at {order.deliveredAt}\n//                   </MessageBox>\n//                 ) : (\n//                   <MessageBox variant=\"danger\">Not Delivered</MessageBox>\n//                 )}\n//               </div>\n//             </li>\n//             <li>\n//               <div className=\"card card-body\">\n//                 <h2>Payment</h2>\n//                 <p>\n//                   <strong>Method:</strong> {order.paymentMethod}\n//                 </p>\n//                 {order.isPaid ? (\n//                   <MessageBox variant=\"success\">\n//                     Paid at {order.paidAt}\n//                   </MessageBox>\n//                 ) : (\n//                   <MessageBox variant=\"danger\">Not Paid</MessageBox>\n//                 )}\n//               </div>\n//             </li>\n//             <li>\n//               <div className=\"card card-body\">\n//                 <h2>Order Items</h2>\n//                 <ul>\n//                   {order.orderItems.map((item) => (\n//                     <li key={item.productID}>\n//                       <div className=\"row\">\n//                         <div>\n//                           <img\n//                             src={item.image}\n//                             alt={item.name}\n//                             className=\"small\"\n//                           ></img>\n//                         </div>\n//                         <div className=\"min-30\">\n//                           <Link to={`/product/${item.productID}`}>\n//                             {item.name}\n//                           </Link>\n//                         </div>\n\n//                         <div>\n//                           {item.qty} x ${item.price} = ${item.qty * item.price}\n//                         </div>\n//                       </div>\n//                     </li>\n//                   ))}\n//                 </ul>\n//               </div>\n//             </li>\n//           </ul>\n//         </div>\n//         <div className=\"col-1\">\n//           <div className=\"card card-body\">\n//             <ul>\n//               <li>\n//                 <h2>Order Summary</h2>\n//               </li>\n//               <li>\n//                 <div className=\"row\">\n//                   <div>Items</div>\n//                   <div>${order.itemsPrice}</div>\n//                 </div>\n//               </li>\n//               <li>\n//                 <div className=\"row\">\n//                   <div>Shipping</div>\n//                   <div>${order.shippingPrice}</div>\n//                 </div>\n//               </li>\n//               <li>\n//                 <div className=\"row\">\n//                   <div>Tax</div>\n//                   <div>${order.taxPrice}</div>\n//                 </div>\n//               </li>\n//               <li>\n//                 <div className=\"row\">\n//                   <div>\n//                     <strong> Order Total</strong>\n//                   </div>\n//                   <div>\n//                     <strong>${order.totalPrice}</strong>\n//                   </div>\n//                 </div>\n//               </li>\n//               {!order.isPaid && (\n//                 <li>\n//                   {!sdkReady ? (\n//                     <LoadingBox></LoadingBox>\n//                   ) : (\n//                     <>\n//                       {errorPay && (\n//                         <MessageBox variant=\"danger\">{errorPay}</MessageBox>\n//                       )}\n//                       {loadingPay && <LoadingBox></LoadingBox>}\n\n//                       <PayPalButton\n//                         amount={order.totalPrice}\n//                         onSuccess={successPaymentHandler}\n//                       ></PayPalButton>\n//                     </>\n//                   )}\n//                 </li>\n//               )}\n//               {userInfo.isAdmin && !order.isPaid && !order.isDelivered && (\n//                 <li>\n//                   {loadingDeliver && <LoadingBox></LoadingBox>}\n//                   {errorDeliver && (\n//                     <MessageBox variant=\"danger\">{errorDeliver}</MessageBox>\n//                   )}\n//                   <button\n//                     type=\"button\"\n//                     className=\"primary block\"\n//                     onClick={deliverHandler}\n//                   >\n//                     Deliver Order\n//                   </button>\n//                 </li>\n//               )}\n//             </ul>\n//           </div>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\nimport Axios from 'axios';\nimport { PayPalButton } from 'react-paypal-button-v2';\nimport { useParams } from 'react-router-dom';\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { deliverOrder, detailsOrder, payOrder } from '../actions/orderActions';\nimport LoadingBox from '../components/LoadingBox';\nimport MessageBox from '../components/MessageBox';\nimport {\n  ORDER_DELIVER_RESET,\n  ORDER_PAY_RESET,\n} from '../constants/orderConstants';\n\nexport default function OrderScreen(props) {\n  const params = useParams();\n  const { id: orderId } = params;\n\n  const [sdkReady, setSdkReady] = useState(false);\n  const orderDetails = useSelector((state) => state.orderDetails);\n  const { order, loading, error } = orderDetails;\n  const userSignin = useSelector((state) => state.userSignin);\n  const { userInfo } = userSignin;\n\n  const orderPay = useSelector((state) => state.orderPay);\n  const {\n    loading: loadingPay,\n    error: errorPay,\n    success: successPay,\n  } = orderPay;\n  const orderDeliver = useSelector((state) => state.orderDeliver);\n  const {\n    loading: loadingDeliver,\n    error: errorDeliver,\n    success: successDeliver,\n  } = orderDeliver;\n  const dispatch = useDispatch();\n  useEffect(() => {\n    // const addPayPalScript = async () => {\n    //   const { data } = await Axios.get('/api/config/paypal');\n    //   const script = document.createElement('script');\n    //   script.type = 'text/javascript';\n    //   script.src = `https://www.paypal.com/sdk/js?client-id=${data}`;\n    //   script.async = true;\n    //   script.onload = () => {\n    //     setSdkReady(true);\n    //   };\n    //   document.body.appendChild(script);\n    // };\n    if (\n      !order \n    ) {\n //    dispatch({ type: ORDER_PAY_RESET });\n   //  dispatch({ type: ORDER_DELIVER_RESET });\n      dispatch(detailsOrder(orderId));\n    } else {\n      // if (!order.isPaid) {\n      //   if (!window.paypal) {\n      //     addPayPalScript();\n      //   } else {\n      //     setSdkReady(true);\n      //   }\n      // }\n    }\n  }, [dispatch, orderId, sdkReady, successPay, successDeliver, order]);\n\n  const successPaymentHandler = (paymentResult) => {\n    dispatch(payOrder(order, paymentResult));\n  };\n  const deliverHandler = () => {\n    dispatch(deliverOrder(order.orderID));\n  };\n  console.log('check aaaaa');\n  console.log(order);\n\n  return loading ? (\n    <LoadingBox></LoadingBox>\n  ) : error ? (\n    <MessageBox variant=\"danger\">{error}</MessageBox>\n  ) : (\n    <div>\n      <h1>Order {order._id}</h1>\n      <div className=\"row top\">\n        <div className=\"col-2\">\n          <ul>\n            <li>\n              <div className=\"card card-body\">\n                <h2>Shippring</h2>\n                <p>\n                  <strong>Name:</strong> {order.shippingAddress.fullName} <br />\n                  <strong>Address: </strong> {order.shippingAddress.address},\n                  {order.shippingAddress.city},{' '}\n                  {order.shippingAddress.postalCode},\n                  {order.shippingAddress.country}\n                </p>\n                {order.isDelivered ? (\n                  <MessageBox variant=\"success\">\n                    Delivered at {order.deliveredAt}\n                  </MessageBox>\n                ) : (\n                  <MessageBox variant=\"danger\">Not Delivered</MessageBox>\n                )}\n              </div>\n            </li>\n            <li>\n              <div className=\"card card-body\">\n                <h2>Payment</h2>\n                <p>\n                  <strong>Method:</strong> {order.paymentMethod}\n                </p>\n                {order.isPaid ? (\n                  <MessageBox variant=\"success\">\n                    Paid at {order.paidAt}\n                  </MessageBox>\n                ) : (\n                  <MessageBox variant=\"danger\">Not Paid</MessageBox>\n                )}\n              </div>\n            </li>\n            <li>\n              <div className=\"card card-body\">\n                <h2>Order Items</h2>\n                <ul>\n                  {order.orderItems.map((item) => (\n                    <li key={item.productID}>\n                      <div className=\"row\">\n                        <div>\n                          <img\n                            src={item.image}\n                            alt={item.name}\n                            className=\"small\"\n                          ></img>\n                        </div>\n                        <div className=\"min-30\">\n                          <Link to={`/product/${item.product}`}>\n                            {item.name}\n                          </Link>\n                        </div>\n\n                        <div>\n                          {item.qty} x ${item.price} = ${item.qty * item.price}\n                        </div>\n                      </div>\n                    </li>\n                  ))}\n                </ul>\n              </div>\n            </li>\n          </ul>\n        </div>\n        <div className=\"col-1\">\n          <div className=\"card card-body\">\n            <ul>\n              <li>\n                <h2>Order Summary</h2>\n              </li>\n              <li>\n                <div className=\"row\">\n                  <div>Items</div>\n                  <div>${Number(order.itemsPrice).toFixed(2)}</div>\n                </div>\n              </li>\n              <li>\n                <div className=\"row\">\n                  <div>Shipping</div>\n                  <div>${Number(order.shippingPrice).toFixed(2)}</div>\n                </div>\n              </li>\n              <li>\n                <div className=\"row\">\n                  <div>Tax</div>\n                  <div>${Number(order.taxPrice).toFixed(2)}</div>\n                </div>\n              </li>\n              <li>\n                <div className=\"row\">\n                  <div>\n                    <strong> Order Total</strong>\n                  </div>\n                  <div>\n                    <strong>${Number(order.totalPrice).toFixed(2)}</strong>\n                  </div>\n                </div>\n              </li>\n              {!order.isPaid && (\n                <li>\n                  {!sdkReady ? (\n                    <LoadingBox></LoadingBox>\n                  ) : (\n                    <>\n                      {errorPay && (\n                        <MessageBox variant=\"danger\">{errorPay}</MessageBox>\n                      )}\n                      {loadingPay && <LoadingBox></LoadingBox>}\n\n                      <PayPalButton\n                        amount={order.totalPrice}\n                        onSuccess={successPaymentHandler}\n                      ></PayPalButton>\n                    </>\n                  )}\n                </li>\n              )}\n              {userInfo.isAdmin && !order.isPaid && !order.isDelivered && (\n                <li>\n                  {loadingDeliver && <LoadingBox></LoadingBox>}\n                  {errorDeliver && (\n                    <MessageBox variant=\"danger\">{errorDeliver}</MessageBox>\n                  )}\n                  <button\n                    type=\"button\"\n                    className=\"primary block\"\n                    onClick={deliverHandler}\n                  >\n                    Deliver Order\n                  </button>\n                </li>\n              )}\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\n"]},"metadata":{},"sourceType":"module"}